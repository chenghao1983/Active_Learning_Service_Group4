//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ActiveLearning.WCF.TestClient.StudentSvcRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Course", Namespace="http://schemas.datacontract.org/2004/07/ActiveLearning.DB")]
    [System.SerializableAttribute()]
    public partial class Course : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Content", Namespace="http://schemas.datacontract.org/2004/07/ActiveLearning.DB")]
    [System.SerializableAttribute()]
    public partial class Content : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuizQuestion", Namespace="http://schemas.datacontract.org/2004/07/ActiveLearning.DB")]
    [System.SerializableAttribute()]
    public partial class QuizQuestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ActiveLearning.WCF.TestClient.StudentSvcRef.Course CourseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CourseSidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DeleteDTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ActiveLearning.WCF.TestClient.StudentSvcRef.QuizOption[] QuizOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateDTField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ActiveLearning.WCF.TestClient.StudentSvcRef.Course Course {
            get {
                return this.CourseField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseField, value) != true)) {
                    this.CourseField = value;
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseSid {
            get {
                return this.CourseSidField;
            }
            set {
                if ((this.CourseSidField.Equals(value) != true)) {
                    this.CourseSidField = value;
                    this.RaisePropertyChanged("CourseSid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDT {
            get {
                return this.CreateDTField;
            }
            set {
                if ((this.CreateDTField.Equals(value) != true)) {
                    this.CreateDTField = value;
                    this.RaisePropertyChanged("CreateDT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeleteDT {
            get {
                return this.DeleteDTField;
            }
            set {
                if ((this.DeleteDTField.Equals(value) != true)) {
                    this.DeleteDTField = value;
                    this.RaisePropertyChanged("DeleteDT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ActiveLearning.WCF.TestClient.StudentSvcRef.QuizOption[] QuizOptions {
            get {
                return this.QuizOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.QuizOptionsField, value) != true)) {
                    this.QuizOptionsField = value;
                    this.RaisePropertyChanged("QuizOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sid {
            get {
                return this.SidField;
            }
            set {
                if ((this.SidField.Equals(value) != true)) {
                    this.SidField = value;
                    this.RaisePropertyChanged("Sid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateDT {
            get {
                return this.UpdateDTField;
            }
            set {
                if ((this.UpdateDTField.Equals(value) != true)) {
                    this.UpdateDTField = value;
                    this.RaisePropertyChanged("UpdateDT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuizOption", Namespace="http://schemas.datacontract.org/2004/07/ActiveLearning.DB")]
    [System.SerializableAttribute()]
    public partial class QuizOption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudentSvcRef.IStudentService")]
    public interface IStudentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetCoursesWithStudentSid", ReplyAction="http://tempuri.org/IStudentService/GetCoursesWithStudentSidResponse")]
        ActiveLearning.WCF.TestClient.StudentSvcRef.Course[] GetCoursesWithStudentSid();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetCoursesWithStudentSid", ReplyAction="http://tempuri.org/IStudentService/GetCoursesWithStudentSidResponse")]
        System.Threading.Tasks.Task<ActiveLearning.WCF.TestClient.StudentSvcRef.Course[]> GetCoursesWithStudentSidAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetCoursesByStudentSid", ReplyAction="http://tempuri.org/IStudentService/GetCoursesByStudentSidResponse")]
        ActiveLearning.WCF.TestClient.StudentSvcRef.Course[] GetCoursesByStudentSid(int studentSid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetCoursesByStudentSid", ReplyAction="http://tempuri.org/IStudentService/GetCoursesByStudentSidResponse")]
        System.Threading.Tasks.Task<ActiveLearning.WCF.TestClient.StudentSvcRef.Course[]> GetCoursesByStudentSidAsync(int studentSid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetContentsByCourseSid", ReplyAction="http://tempuri.org/IStudentService/GetContentsByCourseSidResponse")]
        ActiveLearning.WCF.TestClient.StudentSvcRef.Content[] GetContentsByCourseSid(int courseSid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetContentsByCourseSid", ReplyAction="http://tempuri.org/IStudentService/GetContentsByCourseSidResponse")]
        System.Threading.Tasks.Task<ActiveLearning.WCF.TestClient.StudentSvcRef.Content[]> GetContentsByCourseSidAsync(int courseSid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetNextQuiz", ReplyAction="http://tempuri.org/IStudentService/GetNextQuizResponse")]
        ActiveLearning.WCF.TestClient.StudentSvcRef.QuizQuestion GetNextQuiz();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/GetNextQuiz", ReplyAction="http://tempuri.org/IStudentService/GetNextQuizResponse")]
        System.Threading.Tasks.Task<ActiveLearning.WCF.TestClient.StudentSvcRef.QuizQuestion> GetNextQuizAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/AnswerQuiz", ReplyAction="http://tempuri.org/IStudentService/AnswerQuizResponse")]
        bool AnswerQuiz(int quizQuestionSid, int quizAnswserSid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentService/AnswerQuiz", ReplyAction="http://tempuri.org/IStudentService/AnswerQuizResponse")]
        System.Threading.Tasks.Task<bool> AnswerQuizAsync(int quizQuestionSid, int quizAnswserSid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentServiceChannel : ActiveLearning.WCF.TestClient.StudentSvcRef.IStudentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentServiceClient : System.ServiceModel.ClientBase<ActiveLearning.WCF.TestClient.StudentSvcRef.IStudentService>, ActiveLearning.WCF.TestClient.StudentSvcRef.IStudentService {
        
        public StudentServiceClient() {
        }
        
        public StudentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ActiveLearning.WCF.TestClient.StudentSvcRef.Course[] GetCoursesWithStudentSid() {
            return base.Channel.GetCoursesWithStudentSid();
        }
        
        public System.Threading.Tasks.Task<ActiveLearning.WCF.TestClient.StudentSvcRef.Course[]> GetCoursesWithStudentSidAsync() {
            return base.Channel.GetCoursesWithStudentSidAsync();
        }
        
        public ActiveLearning.WCF.TestClient.StudentSvcRef.Course[] GetCoursesByStudentSid(int studentSid) {
            return base.Channel.GetCoursesByStudentSid(studentSid);
        }
        
        public System.Threading.Tasks.Task<ActiveLearning.WCF.TestClient.StudentSvcRef.Course[]> GetCoursesByStudentSidAsync(int studentSid) {
            return base.Channel.GetCoursesByStudentSidAsync(studentSid);
        }
        
        public ActiveLearning.WCF.TestClient.StudentSvcRef.Content[] GetContentsByCourseSid(int courseSid) {
            return base.Channel.GetContentsByCourseSid(courseSid);
        }
        
        public System.Threading.Tasks.Task<ActiveLearning.WCF.TestClient.StudentSvcRef.Content[]> GetContentsByCourseSidAsync(int courseSid) {
            return base.Channel.GetContentsByCourseSidAsync(courseSid);
        }
        
        public ActiveLearning.WCF.TestClient.StudentSvcRef.QuizQuestion GetNextQuiz() {
            return base.Channel.GetNextQuiz();
        }
        
        public System.Threading.Tasks.Task<ActiveLearning.WCF.TestClient.StudentSvcRef.QuizQuestion> GetNextQuizAsync() {
            return base.Channel.GetNextQuizAsync();
        }
        
        public bool AnswerQuiz(int quizQuestionSid, int quizAnswserSid) {
            return base.Channel.AnswerQuiz(quizQuestionSid, quizAnswserSid);
        }
        
        public System.Threading.Tasks.Task<bool> AnswerQuizAsync(int quizQuestionSid, int quizAnswserSid) {
            return base.Channel.AnswerQuizAsync(quizQuestionSid, quizAnswserSid);
        }
    }
}
