//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ActiveLearning.Web.CourseEnrollService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CourseEnrollService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/StudentRequestToEnrollCourse", ReplyAction="http://tempuri.org/IService/StudentRequestToEnrollCourseResponse")]
        ActiveLearning.Web.CourseEnrollService.StudentRequestToEnrollCourseResponse StudentRequestToEnrollCourse(ActiveLearning.Web.CourseEnrollService.StudentRequestToEnrollCourseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/StudentRequestToEnrollCourse", ReplyAction="http://tempuri.org/IService/StudentRequestToEnrollCourseResponse")]
        System.Threading.Tasks.Task<ActiveLearning.Web.CourseEnrollService.StudentRequestToEnrollCourseResponse> StudentRequestToEnrollCourseAsync(ActiveLearning.Web.CourseEnrollService.StudentRequestToEnrollCourseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AcceptEnrollApplication", ReplyAction="http://tempuri.org/IService/AcceptEnrollApplicationResponse")]
        ActiveLearning.Web.CourseEnrollService.AcceptEnrollApplicationResponse AcceptEnrollApplication(ActiveLearning.Web.CourseEnrollService.AcceptEnrollApplicationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AcceptEnrollApplication", ReplyAction="http://tempuri.org/IService/AcceptEnrollApplicationResponse")]
        System.Threading.Tasks.Task<ActiveLearning.Web.CourseEnrollService.AcceptEnrollApplicationResponse> AcceptEnrollApplicationAsync(ActiveLearning.Web.CourseEnrollService.AcceptEnrollApplicationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RejectEnrollApplication", ReplyAction="http://tempuri.org/IService/RejectEnrollApplicationResponse")]
        ActiveLearning.Web.CourseEnrollService.RejectEnrollApplicationResponse RejectEnrollApplication(ActiveLearning.Web.CourseEnrollService.RejectEnrollApplicationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RejectEnrollApplication", ReplyAction="http://tempuri.org/IService/RejectEnrollApplicationResponse")]
        System.Threading.Tasks.Task<ActiveLearning.Web.CourseEnrollService.RejectEnrollApplicationResponse> RejectEnrollApplicationAsync(ActiveLearning.Web.CourseEnrollService.RejectEnrollApplicationRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StudentRequestToEnrollCourse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StudentRequestToEnrollCourseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int StudentSid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int CourseSid;
        
        public StudentRequestToEnrollCourseRequest() {
        }
        
        public StudentRequestToEnrollCourseRequest(int StudentSid, int CourseSid) {
            this.StudentSid = StudentSid;
            this.CourseSid = CourseSid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StudentRequestToEnrollCourseResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StudentRequestToEnrollCourseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int StudentSid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int CourseSid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int EnrollApplicationSid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public bool EnrollApplicationSuccessfully;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public bool EnrolledSuccessfully;
        
        public StudentRequestToEnrollCourseResponse() {
        }
        
        public StudentRequestToEnrollCourseResponse(int StudentSid, int CourseSid, string Message, int EnrollApplicationSid, bool EnrollApplicationSuccessfully, bool EnrolledSuccessfully) {
            this.StudentSid = StudentSid;
            this.CourseSid = CourseSid;
            this.Message = Message;
            this.EnrollApplicationSid = EnrollApplicationSid;
            this.EnrollApplicationSuccessfully = EnrollApplicationSuccessfully;
            this.EnrolledSuccessfully = EnrolledSuccessfully;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcceptEnrollApplication", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AcceptEnrollApplicationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int EnrollApplicationSid;
        
        public AcceptEnrollApplicationRequest() {
        }
        
        public AcceptEnrollApplicationRequest(int EnrollApplicationSid) {
            this.EnrollApplicationSid = EnrollApplicationSid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AcceptEnrollApplicationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AcceptEnrollApplicationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool IsAcceptedSuccessfully;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool HasError;
        
        public AcceptEnrollApplicationResponse() {
        }
        
        public AcceptEnrollApplicationResponse(bool IsAcceptedSuccessfully, string Message, bool HasError) {
            this.IsAcceptedSuccessfully = IsAcceptedSuccessfully;
            this.Message = Message;
            this.HasError = HasError;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RejectEnrollApplication", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RejectEnrollApplicationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Remark;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int EnrollApplicationSid;
        
        public RejectEnrollApplicationRequest() {
        }
        
        public RejectEnrollApplicationRequest(string Remark, int EnrollApplicationSid) {
            this.Remark = Remark;
            this.EnrollApplicationSid = EnrollApplicationSid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RejectEnrollApplicationResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RejectEnrollApplicationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool IsRejectedSuccessfully;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string Message;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public bool HasError;
        
        public RejectEnrollApplicationResponse() {
        }
        
        public RejectEnrollApplicationResponse(bool IsRejectedSuccessfully, string Message, bool HasError) {
            this.IsRejectedSuccessfully = IsRejectedSuccessfully;
            this.Message = Message;
            this.HasError = HasError;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ActiveLearning.Web.CourseEnrollService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ActiveLearning.Web.CourseEnrollService.IService>, ActiveLearning.Web.CourseEnrollService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ActiveLearning.Web.CourseEnrollService.StudentRequestToEnrollCourseResponse ActiveLearning.Web.CourseEnrollService.IService.StudentRequestToEnrollCourse(ActiveLearning.Web.CourseEnrollService.StudentRequestToEnrollCourseRequest request) {
            return base.Channel.StudentRequestToEnrollCourse(request);
        }
        
        public string StudentRequestToEnrollCourse(ref int StudentSid, ref int CourseSid, out int EnrollApplicationSid, out bool EnrollApplicationSuccessfully, out bool EnrolledSuccessfully) {
            ActiveLearning.Web.CourseEnrollService.StudentRequestToEnrollCourseRequest inValue = new ActiveLearning.Web.CourseEnrollService.StudentRequestToEnrollCourseRequest();
            inValue.StudentSid = StudentSid;
            inValue.CourseSid = CourseSid;
            ActiveLearning.Web.CourseEnrollService.StudentRequestToEnrollCourseResponse retVal = ((ActiveLearning.Web.CourseEnrollService.IService)(this)).StudentRequestToEnrollCourse(inValue);
            StudentSid = retVal.StudentSid;
            CourseSid = retVal.CourseSid;
            EnrollApplicationSid = retVal.EnrollApplicationSid;
            EnrollApplicationSuccessfully = retVal.EnrollApplicationSuccessfully;
            EnrolledSuccessfully = retVal.EnrolledSuccessfully;
            return retVal.Message;
        }
        
        public System.Threading.Tasks.Task<ActiveLearning.Web.CourseEnrollService.StudentRequestToEnrollCourseResponse> StudentRequestToEnrollCourseAsync(ActiveLearning.Web.CourseEnrollService.StudentRequestToEnrollCourseRequest request) {
            return base.Channel.StudentRequestToEnrollCourseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ActiveLearning.Web.CourseEnrollService.AcceptEnrollApplicationResponse ActiveLearning.Web.CourseEnrollService.IService.AcceptEnrollApplication(ActiveLearning.Web.CourseEnrollService.AcceptEnrollApplicationRequest request) {
            return base.Channel.AcceptEnrollApplication(request);
        }
        
        public bool AcceptEnrollApplication(int EnrollApplicationSid, out string Message, out bool HasError) {
            ActiveLearning.Web.CourseEnrollService.AcceptEnrollApplicationRequest inValue = new ActiveLearning.Web.CourseEnrollService.AcceptEnrollApplicationRequest();
            inValue.EnrollApplicationSid = EnrollApplicationSid;
            ActiveLearning.Web.CourseEnrollService.AcceptEnrollApplicationResponse retVal = ((ActiveLearning.Web.CourseEnrollService.IService)(this)).AcceptEnrollApplication(inValue);
            Message = retVal.Message;
            HasError = retVal.HasError;
            return retVal.IsAcceptedSuccessfully;
        }
        
        public System.Threading.Tasks.Task<ActiveLearning.Web.CourseEnrollService.AcceptEnrollApplicationResponse> AcceptEnrollApplicationAsync(ActiveLearning.Web.CourseEnrollService.AcceptEnrollApplicationRequest request) {
            return base.Channel.AcceptEnrollApplicationAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ActiveLearning.Web.CourseEnrollService.RejectEnrollApplicationResponse ActiveLearning.Web.CourseEnrollService.IService.RejectEnrollApplication(ActiveLearning.Web.CourseEnrollService.RejectEnrollApplicationRequest request) {
            return base.Channel.RejectEnrollApplication(request);
        }
        
        public bool RejectEnrollApplication(string Remark, int EnrollApplicationSid, out string Message, out bool HasError) {
            ActiveLearning.Web.CourseEnrollService.RejectEnrollApplicationRequest inValue = new ActiveLearning.Web.CourseEnrollService.RejectEnrollApplicationRequest();
            inValue.Remark = Remark;
            inValue.EnrollApplicationSid = EnrollApplicationSid;
            ActiveLearning.Web.CourseEnrollService.RejectEnrollApplicationResponse retVal = ((ActiveLearning.Web.CourseEnrollService.IService)(this)).RejectEnrollApplication(inValue);
            Message = retVal.Message;
            HasError = retVal.HasError;
            return retVal.IsRejectedSuccessfully;
        }
        
        public System.Threading.Tasks.Task<ActiveLearning.Web.CourseEnrollService.RejectEnrollApplicationResponse> RejectEnrollApplicationAsync(ActiveLearning.Web.CourseEnrollService.RejectEnrollApplicationRequest request) {
            return base.Channel.RejectEnrollApplicationAsync(request);
        }
    }
}
