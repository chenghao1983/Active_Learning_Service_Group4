@model IEnumerable<ActiveLearning.DB.Content>
@using ActiveLearning.Common;

@{
    ViewBag.Title = "Review Content";
}

<h2>Review Content</h2>

@Html.Partial("_MessageBoxPartial")

@if (Model != null && Model.Count() > 0)
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Course.CourseName)
            </th>
            <th>File Name</th>
            <th>Type</th>
            <th>
                @Html.DisplayNameFor(model => model.CreateDT)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdateDT)
            </th>
            <th>Action</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Course.CourseName)
                </td>
                <td>
                    @item.OriginalFileName
                </td>
                <td>
                    @if (item.Type.Equals(Constants.Content_Type_Video, StringComparison.CurrentCultureIgnoreCase))
                    {
                        <label class="text-success">Video</label>
                    }
                    else if (item.Type.Equals(Constants.Content_Type_File, StringComparison.CurrentCultureIgnoreCase))
                    {
                        <label class="text-primary">File</label>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreateDT)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdateDT)
                </td>
                <td>
                    <div class="dropdown">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">Action<span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            @if (item.Type.Equals(Constants.Content_Type_Video, StringComparison.CurrentCultureIgnoreCase))
                            {
                                <li>
                                    @Html.ActionLink("Watch", "Download", new { contentSid = @item.Sid, originalFileName = @item.OriginalFileName }, new { @class = "btn-md" })
                                </li>
                            }
                            else if (item.Type.Equals(Constants.Content_Type_File, StringComparison.CurrentCultureIgnoreCase))
                            {
                                <li>
                                    @Html.ActionLink("Download", "Download", new { contentSid = @item.Sid, originalFileName = @item.OriginalFileName }, new { @class = "btn-md" })
                                </li>
                            }
                            <li>
                                @Html.ActionLink("Accept", "AcceptContent", new { contentSid = item.Sid })
                            </li>
                            <li>
                                @Html.ActionLink("Comment", "CommentContent", new { contentSid = item.Sid })
                            </li>
                        </ul>
                    </div>

                </td>
            </tr>
        }

    </table>
}